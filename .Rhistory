geom_smooth(span = 0.05, mapping = aes(x = seq(new.price), y = new.price)) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.05, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.05, mapping = aes(x = seq(new.price), y = new.price)) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price)) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price)) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.05, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price)) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price, color = "red")) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price)) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price, color = "red")) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price))
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price, color = "red")) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price)) +
labs(x = "Observations sorted by new price)", y = "Price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price, color = "red")) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price, color = "blue")) +
labs(x = "Observations sorted by new price", y = "Price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price,) color = "blue") +
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
labs(x = "Observations sorted by new price", y = "Price")
ggplot(data[order(data$price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
labs(x = "Observations sorted by new price", y = "Price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
labs(x = "Observations sorted by new price", y = "Price")
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
rlang::last_trace()
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price))) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
rlang::last_trace()
ggplot(cars_df, aes(x = seq_along(price))) +
geom_line(aes(y = new.price), color = "red") + # Red line for new.price
geom_line(aes(y = price), color = "blue") +   # Blue line for price
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price), fill = "Difference")) +
labs(x = "Observation Number", y = "Price") +
ggtitle("Comparison of Price and New Price with Filled Area")
ggplot(data, aes(x = seq_along(price))) +
geom_line(aes(y = new.price), color = "red") + # Red line for new.price
geom_line(aes(y = price), color = "blue") +   # Blue line for price
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price), fill = "Difference")) +
labs(x = "Observation Number", y = "Price") +
ggtitle("Comparison of Price and New Price with Filled Area")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price), fill = "Difference")) +
#geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
rlang::last_trace()
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(x = seq(new.price), y = price, aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(x = seq(new.price), aes(ymin = pmin(new.price, price), ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
rlang::last_trace()
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = pmin(new.price, price),
ymax = pmax(new.price, price)), fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = pmin(new.price, price) - predict(loess(price ~ seq(price))),
ymax = pmax(new.price, price) - predict(loess(price ~ seq(price)))),
fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price))),
ymax = pmax(new.price, price) - predict(loess(price ~ seq(price)))),
fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price))),
ymax = predict(loess(price ~ seq(price)))),
fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price))),
ymax = predict(loess(new.price ~ seq(price)))),
fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.3) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue") +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red") +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of price and new price")
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of listing prices and new prices")
summary(lm(depreciation ~ price))
attach(data)
summary(lm(depreciation ~ price))
ggplot(data) +
geom_point(mapping = aes(depreciation, price))
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth()
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price))
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price), method = smooth)
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price), method = lm)
ggplot(lm(depreciation ~ price), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(depreciation ~ kilometers))
ggplot(data, mapping = aes(depreciation, kilometers)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ vehicle.age))
ggplot(data, mapping = aes(depreciation, vehicle.age)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ price))
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price), method = lm)
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price))
summary(lm(depreciation ~ vehicle.age))
ggplot(data, mapping = aes(depreciation, vehicle.age)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ kilometers))
ggplot(data, mapping = aes(depreciation, kilometers)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ new.price))
ggplot(data, mapping = aes(depreciation, new.price)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ power))
ggplot(data, mapping = aes(depreciation, power)) +
geom_point() +
geom_smooth()
ggplot(data, mapping = aes(depreciation, seq(depreciation))) +
geom_point() +
geom_smooth()
ggplot(data, mapping = aes(depreciation, power)) +
geom_point() +
geom_smooth()
seq(depreciation)
summary(lm(depreciation ~ consumption))
ggplot(data, mapping = aes(depreciation, consumption)) +
geom_point() +
geom_smooth()
source("~/GitHub/Data_science/scripts/Question 1/golf_models.R", echo=TRUE)
write.csv(data, "golf_models_data")
write.csv(data, "golf_models_data.csv")
source("~/GitHub/Data_science/scripts/Question 3/golf_depreciation.R", echo=TRUE)
# fuel type
table(fuel.type)
summary(lm(depreciation ~ diesel))
ggplot(data, mapping = aes(depreciation, diesel)) +
geom_point() +
geom_smooth()
ggplot(data, mapping = aes(depreciation, diesel)) +
geom_point()
summary(lm(depreciation ~ electric))
ggplot(data, mapping = aes(depreciation, electric)) +
geom_point()
summary(lm(depreciation ~ hybrid))
ggplot(data, mapping = aes(depreciation, hybrid)) +
geom_point()
table(body.type)
summary(lm(depreciation ~ wagon))
ggplot(data, mapping = aes(depreciation, wagon)) +
geom_point()
summary(lm(depreciation ~ manual))
ggplot(data, mapping = aes(depreciation, manual)) +
geom_point()
summary(lm(depreciation ~ awd))
ggplot(data, mapping = aes(depreciation, awd)) +
geom_point()
source("~/GitHub/Data_science/scripts/Question 3/golf_depreciation.R", echo=TRUE)
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of listing prices and new prices")
summary(lm(depreciation ~ price))
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price))
ggplot(lm(depreciation ~ price), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(depreciation ~ vehicle.age))
ggplot(data, mapping = aes(depreciation, vehicle.age)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ kilometers))
ggplot(data, mapping = aes(depreciation, kilometers)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ new.price))
ggplot(data, mapping = aes(depreciation, new.price)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ power))
ggplot(data, mapping = aes(depreciation, power)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ consumption))
ggplot(data, mapping = aes(depreciation, consumption)) +
geom_point() +
geom_smooth()
table(fuel.type)
summary(lm(depreciation ~ hybrid))
ggplot(data, mapping = aes(depreciation, hybrid)) +
geom_point()
summary(lm(depreciation ~ kilometers))
ggplot(data, mapping = aes(depreciation, kilometers)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ vehicle.age))
ggplot(data, mapping = aes(depreciation, vehicle.age)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ kilometers))
ggplot(data, mapping = aes(depreciation, kilometers)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ new.price))
ggplot(data, mapping = aes(depreciation, new.price)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ power))
ggplot(data, mapping = aes(depreciation, power)) +
geom_point() +
geom_smooth()
summary(lm(depreciation ~ consumption))
ggplot(data, mapping = aes(depreciation, consumption)) +
geom_point() +
geom_smooth()
table(fuel.type)
summary(lm(depreciation ~ hybrid))
ggplot(data, mapping = aes(depreciation, hybrid)) +
geom_point()
summary(lm(depreciation ~ hybrid))
summary(lm(depreciation ~ wagon))
ggplot(data, mapping = aes(depreciation, wagon)) +
geom_point()
summary(lm(depreciation ~ manual))
ggplot(data, mapping = aes(depreciation, manual)) +
geom_point()
summary(lm(depreciation ~ awd))
ggplot(data, mapping = aes(depreciation, awd)) +
geom_point()
table(body.type)
table(fuel.type)
model1 <- lm(depreciation ~ price + new.price + kilometers + vehicle.age + power + consumption + expertise + warranty + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
summary(model1)
summary(lm(depreciation ~ price))
ggplot(data) +
geom_point(mapping = aes(depreciation, price)) +
geom_smooth(mapping = aes(depreciation, price))
ggplot(lm(depreciation ~ price), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(model1)
ggplot(lm(depreciation ~ price), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data[order(data$new.price),]) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = new.price), color = "red", se = FALSE) +
ylim(c(0, max(new.price))) +
geom_smooth(span = 0.1, mapping = aes(x = seq(new.price), y = price), color = "blue", se = FALSE) +
geom_ribbon(aes(x = seq(new.price),
ymin = predict(loess(price ~ seq(price), span = 0.1)),
ymax = predict(loess(new.price ~ seq(price), span = 0.1))),
fill = "grey", alpha = 0.5) +
labs(x = "Observations sorted by new price", y = "Price") +
ggtitle("Comparison of listing prices and new prices")
summary(model1)
model2 <- lm(depreciation ~ power + consumption + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
model2
summary(model2)
data$rel_dep <- 1 - price/new.price
model3 <- lm(rel_dep ~ power + consumption + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
attach(data)
model3 <- lm(rel_dep ~ power + consumption + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
summary(model3)
summary(model2)
table(fuel.type)
model2 <- lm(depreciation ~ power + consumption + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
summary(model2)
model1 <- lm(rel_dep ~ price + new.price + kilometers + vehicle.age + power + consumption + expertise + warranty + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
summary(model1)
model1 <- lm(depreciation ~ price + new.price + kilometers + vehicle.age + power + consumption + expertise + warranty + wagon + cabriolet + diesel + hybrid + electric + manual + awd)
summary(model1)
ggplot(data, mapping = aes(rel_dep, consumption)) +
geom_point() +
geom_smooth()
summary(model3)
ggplot(data, mapping = aes(rel_dep, wagon)) +
geom_point()
ggplot(data, mapping = aes(rel_dep, hybrid)) +
geom_point()
ggplot(data, mapping = aes(rel_dep, manual)) +
geom_point()
ggplot(data, mapping = aes(rel_dep, awd)) +
geom_point()
ggplot(data, mapping = aes(depreciation, awd)) +
geom_point()
