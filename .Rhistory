geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ power))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ power))
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared)
summary(model1)
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
plot(model1)
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
attributes(model1)
ggplot(model1, aes(x = .fitted.values, y = .residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = loess) +
ylim(0, max(data$price))
data_numeric
data_numeric <- select(data, c("price", "vehicle.age", "kilometers", "power", "consumption"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ consumption))
ggplot(data, aes(consumption, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
### We will now make simple linear models to test our
typeof(data$defective)
anova(model1)
library(tidyverse)
library(corrplot)
library(Hmisc)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
golf2_cleaned <- read.csv("golf2_cleaned.csv")
attach(data)
data_numeric <- select(data, c("price", "vehicle.age", "kilometers", "power", "consumption"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ consumption))
ggplot(data, aes(consumption, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ vehicle.age))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = loess) +
ylim(0, max(data$price))
data$vehicle.age.squared <- (vehicle.age ^ 2)
data$vehicle.age.cubed <- (vehicle.age ^ 3)
attach(data)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ kilometers))
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
data$kilometers.squared <- (kilometers ^ 2)
attach(data)
summary(lm(price ~ kilometers + kilometers.squared))
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ power))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
anova(model1)
attributes(anova(model1))
sqrt(anova$model1)
sqrt(anova$model1$"Mean Sq")
sqrt(anova(model1)$"Mean Sq")
sqrt(anova(model1)$"Mean Sq")[6]
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
library(tidyverse)
library(corrplot)
library(Hmisc)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
golf2_cleaned <- read.csv("golf2_cleaned.csv")
attach(data)
data_numeric <- select(data, c("price", "vehicle.age", "kilometers", "power", "consumption"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ consumption))
ggplot(data, aes(consumption, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ vehicle.age))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = loess) +
ylim(0, max(data$price))
data$vehicle.age.squared <- (vehicle.age ^ 2)
data$vehicle.age.cubed <- (vehicle.age ^ 3)
attach(data)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ kilometers))
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
data$kilometers.squared <- (kilometers ^ 2)
attach(data)
summary(lm(price ~ kilometers + kilometers.squared))
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ power))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
data_no_def <- select(data$defective == FALSE)
data_no_def <- select(data, data$defective == FALSE)
as.tibble(data$defective) |>
#  group_by_all() |>
count() |>
anova(model1)
as_tibble(data$defective) |>
#  group_by_all() |>
count() |>
anova(model1)
as_tibble(data$defective) |>
#  group_by_all() |>
count()
as_tibble(data$defective) |>
group_by_all() |>
count()
unique(data$defective)
count(unique(data$defective))
as_tibble(data$defective) |>
group_by_all() |>
count()[2]
table(data$defective)
table(data$defective)[1]
table(data$defective)[2]/table(data$defective)[1]
which(data$defective)
filter(data, defective)
filter(data, !defective)
data_no_def <- filter(data, !defective)
View(data_no_def)
table(data$defective)[2]/table(data$defective)[1]
model2 <- lm(data_no_def$price ~ data_no_def$vehicle.age + data_no_def$vehicle.age.squared + data_no_def$kilometers + data_no_def$kilometers.squared + data_no_def$power)
summary(model2)
#standard error
sqrt(anova(model1)$"Mean Sq")[6]
ggplot(model2, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(model2, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
sqrt(anova(model2)$"Mean Sq")[6]
sqrt(anova(model1)$"Mean Sq")[6]
sqrt(anova(model2)$"Mean Sq")[6]
4089.761/4112.448
anova(model1)
summary(model1)
sqrt(anova(model1)$"Mean Sq")[Residuals]
sqrt(anova(model1)$"Mean Sq")["Residuals"]
sqrt(anova(model1)$"Mean Sq")[6]
table(body.type)
8/nrow(data)
data_logical <- filter(data, body.type != "Petite voiture")
nrow(data_logical)
nrow(data)
data_logical <- data |>
filter(body.type != "Petite voiture") |>
filter(body.type != "Coupé")
nrow(data_logical)
data$break <- logical(nrow(data))
data$wagon <- logical(nrow(data))
data$wagon <- TRUE if data$body.type == "Break"
data$wagon <- data$body.type == "Break"
rm(data$wagon)
data$wagon <- data$body.type == "Break"
data$cabriolet <- body.type == "Cabriolet"
table(fuel.type)
data$hybrid <- fuel.type == "Hybride léger essence/électrique" | "Hybride rechargeable essence/électrique"
data$diesel <- fuel.type == "Diesel"
data$hybrid <- fuel.type == "Hybride léger essence/électrique"
data$hybrid <- fuel.type == "Hybride rechargeable essence/électrique"
data$hybrid <- fuel.type == TRUE | "Hybride rechargeable essence/électrique"
data$hybrid <- ifelse(fuel.type == "Hybride léger essence/électrique" |
fuel.type == "Hybride rechargeable essence/électrique",
TRUE, FALSE)
data$natural.gas <- fuel.type == "Gaz naturel (CNG) / Essence"
data$electric <- fuel.type == "Électrique"
table(transmission)
data$hybrid <- ifelse(fuel.type == "Automatique" |
fuel.type == "Boîte manuelle automatisée" |
fuel.type == "Boîte automatique variable",
TRUE, FALSE)
data$hybrid <- ifelse(fuel.type == "Hybride léger essence/électrique" |
fuel.type == "Hybride rechargeable essence/électrique",
TRUE, FALSE)
data$manual <- ifelse(transmission == "Automatique" |
transmission == "Boîte manuelle automatisée" |
transmission == "Boîte automatique variable",
TRUE, FALSE)
table(drivetrain)
id_counts <- data |>
count(listing.id)
View(id_counts)
duplicates <- id_counts |>
filter(n > 1)|>
pull(listing.id)
test <- data[-2703,]
View(test)
source("~/GitHub/Data_science/scripts/golf2_cleaning.R", echo=TRUE)
library(tidyverse)
library(corrplot)
library(Hmisc)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
golf2_cleaned <- read.csv("golf2_cleaned.csv")
attach(data)
data_numeric <- select(data, c("price", "vehicle.age", "kilometers", "power", "consumption"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ consumption))
ggplot(data, aes(consumption, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ vehicle.age))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = loess) +
ylim(0, max(data$price))
data$vehicle.age.squared <- (vehicle.age ^ 2)
data$vehicle.age.cubed <- (vehicle.age ^ 3)
attach(data)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ kilometers))
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
data$kilometers.squared <- (kilometers ^ 2)
attach(data)
summary(lm(price ~ kilometers + kilometers.squared))
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ power))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
table(data$defective)[2]/table(data$defective)[1]
data_no_def <- filter(data, !defective)
model2 <- lm(data_no_def$price ~ data_no_def$vehicle.age + data_no_def$vehicle.age.squared + data_no_def$kilometers + data_no_def$kilometers.squared + data_no_def$power)
summary(model2)
ggplot(model2, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
sqrt(anova(model1)$"Mean Sq")[6] # Sd model1
sqrt(anova(model2)$"Mean Sq")[6] # Sd model2
data_logical <- data |>
filter(body.type != "Petite voiture") |>
filter(body.type != "Coupé")
data$wagon <- body.type == "Break"
data$cabriolet <- body.type == "Cabriolet"
data_logical <- data |>
filter(body.type != "Petite voiture") |>
filter(body.type != "Coupé")
data$diesel <- fuel.type == "Diesel"
data$hybrid <- ifelse(fuel.type == "Hybride léger essence/électrique" |
fuel.type == "Hybride rechargeable essence/électrique",
TRUE, FALSE)
data$natural.gas <- fuel.type == "Gaz naturel (CNG) / Essence"
data$electric <- fuel.type == "Électrique"
data$manual <- ifelse(transmission == "Automatique" |
transmission == "Boîte manuelle automatisée" |
transmission == "Boîte automatique variable",
TRUE, FALSE)
table(drivetrain)
data$awd <- drivetrain == "4 roues motrices"
table(body.type)
lm(price ~ expertise)
summary(lm(price ~ expertise))
summary(lm(price ~ warranty))
summary(lm(price ~ wagon))
attach(data)
summary(lm(price ~ wagon))
plot(lm(price ~ wagon))
plot(lm(price ~ warranty))
summary(lm(price ~ cabriolet))
summary(lm(price ~ diesel))
summary(lm(price ~ hybrid))
summary(lm(price ~ natural.gas))
summary(lm(price ~ electric))
table(fuel.type)
summary(lm(price ~ manual))
summary(lm(price ~ awd))
data$small.car <- body.type == "Petite voiture"
data$coupe <- body.type == "Coupé"
attach(data)
summary(lm(price ~ small.car))
summary(lm(price ~ coupe))
summary(lm(price ~ expertise))
summary(lm(price ~ warranty))
summary(lm(price ~ wagon))
summary(lm(price ~ cabriolet))
summary(lm(price ~ small.car))
summary(lm(price ~ diesel))
summary(lm(price ~ hybrid))
summary(lm(price ~ hybrid))
summary(lm(price ~ natural.gas))
summary(lm(price ~ electric))
summary(lm(price ~ manual))
summary(lm(price ~ awd))
model3 <- lm(price ~ expertise + warranty + wagon + cabriolet + small.car + coupe + diesel + hybrid + natural.gas + electric + manual + awd)
summary(model3)
model3 <- lm(price ~ expertise + warranty + wagon + cabriolet + diesel + hybrid + manual + awd)
summary(model3)
model4 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power + expertise + warranty + wagon + cabriolet + diesel + hybrid + manual + awd)
summary(model4)
model4 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power + expertise + warranty + wagon + diesel + hybrid + manual + awd)
summary(model4)
ggplot(model4, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
sqrt(anova(model4)$"Mean Sq")[6]
anova(model4)
sqrt(anova(model2)$"Mean Sq")[6]
sqrt(anova(model4)$"Mean Sq")[6]
sqrt(anova(model4)$"Mean Sq")[13]
anova(model3)
model3 <- lm(price ~ expertise + warranty + wagon + cabriolet + small.car + coupe + diesel + hybrid + natural.gas + electric + manual + awd)
anova(model3)
model3 <- lm(price ~ expertise + warranty + wagon + cabriolet + diesel + hybrid + manual + awd)
anova(model3)
anova(model4)
