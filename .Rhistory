geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption, alpha = 0.1))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption, alpha = 1))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 1, fill = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 1)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.1)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.25)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(kilometers, vehicle.age)) +
geom_rug(mapping = aes(x = kilometers, y = vehicle.age), sides = "bl")
ggplot(data = data) +
geom_point(mapping = aes(kilometers, vehicle.age)) +
geom_rug(mapping = aes(x = kilometers, y = vehicle.age))
library(tidyverse)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
attach(data)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(kilometers, vehicle.age)) +
geom_rug(mapping = aes(x = kilometers, y = vehicle.age))
ggplot(data = data) +
geom_point(mapping = aes(kilometers, vehicle.age)) +
geom_quantile(mapping = aes(x = kilometers, y = vehicle.age)) +
geom_smooth(method = lm, mapping = aes(kilometers, vehicle.age), color = "green")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(x = kilometers, y = price)) +
geom_smooth(mapping = aes(kilometers, price))
ggplot(data = data) +
geom_point(mapping = aes(kilometers, vehicle.age)) +
geom_rug(mapping = aes(x = kilometers, y = vehicle.age))
ggplot(data = data) +
geom_point(mapping = aes(kilometers, vehicle.age)) +
geom_quantile(mapping = aes(x = kilometers, y = vehicle.age)) +
geom_smooth(method = lm, mapping = aes(kilometers, vehicle.age), color = "green")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty))
### Research question 1: Which physical factors have the biggest impact on used car prices?
library(tidyverse)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
attach(data)
View(data)
cor(data)
cor(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age", "listing.age", "defective")))
cor(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")))
select(data,c("price", "kilometers", "power", "consumption", "vehicle.age"))
nrow(select(data,c("price", "kilometers", "power", "consumption", "vehicle.age")))
nrow(na.rm(select(data,c("price", "kilometers", "power", "consumption", "vehicle.age"))))
nrow(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age", na.rm = TRUE)))
na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")))
cor(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age"))), use = "complete.obs")
cor(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age"))))
cor(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")
cor_matrix <- cor(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
library(corrplot)
corrplot(cor_matrix)
summary(cor_matrix)
install.packages("Hmisc")
library(Hmisc)
rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")))
corrplot(cor_matrix)
rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")), type=c("pearson","spearman"))
rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")), type="spearman")
rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")), type="sperman")
rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")), type="spearman")
rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")), type="pearson")
summary(rcorr(as.matrix(na.omit(select(data, c("price", "kilometers", "power", "consumption", "vehicle.age")), use = "complete.obs")), type="pearson"))
data_numeric <- select(data, c("price", "kilometers", "power", "consumption", "vehicle.age"))
data_numeric
cor.test(data$price, data$kilometers)
cor.test(data$price, data$kilometers, conf.level = 0.99)
cor.test(data$price, data$kilometers, conf.level = 0.9999)
cor.test(data$price, data$kilometers, conf.level = 0.9999999999999999999999999999)
cor.test(data$price, data$kilometers, conf.level = 0.99)
rcorr(as.matrix(na.omit(data_numeric), use = "complete.obs")))
rcorr(as.matrix(na.omit(data_numeric), use = "complete.obs"))
cor.test(data$power, data$kilometers, conf.level = 0.99)
cor.test(data$price, data$consumption, conf.level = 0.99)
cor.test(data$price, data$consumption, conf.level = 0.05)
cor.test(data$price, data$consumption, conf.level = 0.01)
cor.test(data$price, data$consumption)
cor.test(data$power, data$kilometers, alternative = "two.sided", conf.level = 0.99)
cor.test(data$price, data$consumption, alternative = "two.sided", conf.level = 0.99)
cor.test(data$price, data$consumption, alternative = "two.sided", conf.level = 0.95)
lm(price ~ kilometers)
summary(lm(price ~ kilometers))
summary(lm(price ~ consumption))
summary(lm(price ~ vehicle.age))
summary(lm(price ~ power))
plot(lm(price ~ kilometers))
model1 <- lm(price ~ kilometers + vehicle.age + power)
summary(model1)
corrplot(cor_matrix)
cor_matrix
summary(model1)
plot(model1)
qqplot(model1)
qqplot(price, vehicle.age)
qqline(price)
qqline(kilometers)
qqplot(price, kilometers)
qqnorm(price)
qqnorm(vehicle.age)
qqplot(price, vehicle.age)
plot(model1)
plot(model1)
plot(price, vehicle.age)
plot(lm(price ~ vehicle.age))
plot(lm(price ~ kilometers))
plot(model1)
plot(price, vehicle.age)
plot(price, kilometers)
plot(lm(price ~ kilometers))
plot(lm(price ~ power))
summary(model1)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = lm, mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth( mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
#geom_smooth( mapping = aes(vehicle.age, price), color = "red")
# In the graph above, we can see that
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
#geom_smooth( mapping = aes(vehicle.age, price), color = "red")
# In the graph above, we can see that
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
#geom_smooth( mapping = aes(vehicle.age, price), color = "red")
# In the graph above, we can see that
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, size = power, color = consumption), alpha = 0.5)
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth( mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
summary(model1)
ggplot(data, aes(price, kilometers)) +
geom_point()
ggplot(data, aes(kilometers, price)) +
geom_point()
geom_smooth(method = lm)
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm)
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ power))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
plot(lm(price ~ vehicle.age))
plot(model1)
plot(model1)
#
plot(lm(price ~ vehicle.age))
plot(lm(price ~ vehicle.age), 1)
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0)
#The relationship between price and vehicle age is obviously not linear. We can check this with a residuals vs fitted plot, which should show us a horizontal line if the data is linear.
plot(lm(price ~ vehicle.age), 1)
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red")
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red", linewidth = 2)
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red", linewidth = 1)
#The relationship between price and vehicle age is obviously not linear. We can check this with a residuals vs fitted plot, which should show us a horizontal line if the data is linear.
plot(lm(price ~ vehicle.age), 1)
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_smooth() +
geom_hline(yintercept = 0, color = "red", linewidth = 1)
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red" linewidth = 1) +
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ vehicle.age + vehicle.age^2 + vehicle.age^3))
golf2_cleaned <- read.csv("golf2_cleaned.csv")
# We can try to fix this using second and third degree variables. Let's make these models below:
data$vehicle.age.squared <- (vehicle.age ^ 2)
data$vehicle.age.cubed <- (vehicle.age ^ 3)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
attach(data)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
summary(lm(price ~ vehicle.age))
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
### Research question 1: Which physical factors have the biggest impact on used car prices?
library(tidyverse)
library(corrplot)
install.packages("Hmisc")
library(corrplot)
library(Hmisc)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
golf2_cleaned <- read.csv("golf2_cleaned.csv")
attach(data)
data_numeric <- select(data, c("price", "kilometers", "power", "consumption", "vehicle.age"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ kilometers))
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ vehicle.age))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
data$vehicle.age.squared <- (vehicle.age ^ 2)
data$vehicle.age.cubed <- (vehicle.age ^ 3)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
attach(data)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data = data) +
geom_point(mapping = aes(x = kilometers, y = price)) +
geom_smooth(mapping = aes(kilometers, price))
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = kilometers, y = price)) +
geom_smooth(mapping = aes(kilometers, price))
ggplot(data = data) +
geom_point(mapping = aes(x = kilometers, y = price)) +
geom_smooth(method = lm, mapping = aes(kilometers, price))
### Research question 1: Which physical factors have the biggest impact on used car prices?
library(tidyverse)
library(corrplot)
library(Hmisc)
setwd("~/GitHub/Data_science/cleaned-data")
data <- read.csv("golf2_cleaned.csv")
golf2_cleaned <- read.csv("golf2_cleaned.csv")
attach(data)
data_numeric <- select(data, c("price", "kilometers", "power", "consumption", "vehicle.age"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ vehicle.age))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
data$vehicle.age.squared <- (vehicle.age ^ 2)
data$vehicle.age.cubed <- (vehicle.age ^ 3)
attach(data)
summary(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed))
ggplot(lm(price ~ vehicle.age + vehicle.age.squared + vehicle.age.cubed), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ vehicle.age + vehicle.age.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ kilometers))
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
# We add a second degree variable kilometers.squared
data$kilometers.squared <- (kilometers ^ 2)
attach(data)
summary(lm(price ~ kilometers + kilometers.squared))
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ kilometers ), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ kilometers), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
summary(lm(price ~ power))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ kilometers + kilometers.squared), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ power), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
summary(lm(price ~ power))
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared)
summary(model1)
model1 <- lm(price ~ vehicle.age + vehicle.age.squared + kilometers + kilometers.squared + power)
summary(model1)
plot(model1)
ggplot(data, aes(kilometers, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
attributes(model1)
ggplot(model1, aes(x = .fitted.values, y = .residuals)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(model1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price, color = warranty)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(lm(price ~ vehicle.age), aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, color = "red", linewidth = 1) +
geom_smooth()
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price), color = "red")
ggplot(data = data) +
geom_point(mapping = aes(x = vehicle.age, y = price)) +
geom_smooth(method = loess, mapping = aes(vehicle.age, price))
ggplot(data, aes(vehicle.age, price)) +
geom_point() +
geom_smooth(method = loess) +
ylim(0, max(data$price))
data_numeric
data_numeric <- select(data, c("price", "vehicle.age", "kilometers", "power", "consumption"))
data_numeric
cor_matrix <- cor(data_numeric, use = "complete.obs")
cor_matrix
corrplot(cor_matrix)
summary(lm(price ~ consumption))
ggplot(data, aes(consumption, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
ggplot(data, aes(power, price)) +
geom_point() +
geom_smooth(method = lm) +
ylim(0, max(data$price))
### We will now make simple linear models to test our
typeof(data$defective)
