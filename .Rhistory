labs(title = "Audi: Vehicle age vs Price", x = "Vehicle age (years)", y = "Price (CHF)") +
theme_classic()
p1 <- ggplotly(graph1)
p1
# Combine all dataframes into one
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Convert body type to a factor for better plotting
all_cars$body.type <- as.factor(all_cars$body.type)
# We filter cars for body types where there is sufficient data
filtered_cars <- subset(all_cars, body.type %in% c("Break", "Cabriolet", "Limousine", "Petite voiture", "SUV / Tout-terrain"))
# Create the scatter plot
graph0 <- ggplot(filtered_cars, aes(x = body.type, y = price)) +
geom_boxplot() +
labs(title = "Price distribution by body type and brand",
x = "body type", y = "Price") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) # Rotate X-axis labels for better readability
p1 <- ggplotly(graph0)
p1
# AUDI: Engine Power vs Price
graph1 <- ggplot(audi, aes(x = power, y = price)) +
geom_point(color = "purple", size = 0.5, alpha = 0.6) +
labs(title = "Audi: Engine Power vs Price", x = "Engine Power (HP)", y = "Price") +
theme_minimal()
p1 <- ggplotly(graph1)
p1
library(dplyr)
# Chargement des données
setwd("~/GitHub/Data_science/cleaned-data")
audi <- read.csv("audi_models_data.csv")
golf <- read.csv("golf_models_data.csv")
toyota <- read.csv("toyota_models_data.csv")
skoda <- read.csv("skoda_models_data.csv")
volvo <- read.csv("volvo_models_data.csv")
# Fonction pour ajuster les données et créer le graphique en barres
create_bar_plot <- function(data, title) {
data %>%
mutate(fuel.type = ifelse(grepl("hybrid", fuel.type, ignore.case = TRUE), "hybrid", fuel.type)) %>%  # Regroupe tous les types d'hybrides
group_by(fuel.type) %>%
dplyr::summarize(Average_Price = mean(price, na.rm = TRUE)) %>%
ggplot(aes(x = fuel.type, y = Average_Price)) +
geom_col(aes(fill = fuel.type)) +
scale_fill_manual(values = c("Diesel" = "blue", "Essence" = "red", "hybrid" = "green", "Électrique" = "purple", "Gaz naturel (CNG) / Essence" = "orange")) +
labs(title = title, x = "Fuel Type", y = "Average Price") +
theme_minimal()
}
# Création des graphiques pour chaque marque
bar_plot_audi <- create_bar_plot(audi, "AUDI - Fuel type vs Average price ")
p1 <- ggplotly(bar_plot_audi)
p1
library(dplyr)
# Chargement des données
setwd("~/GitHub/Data_science/cleaned-data")
audi <- read.csv("audi_models_data.csv")
golf <- read.csv("golf_models_data.csv")
toyota <- read.csv("toyota_models_data.csv")
skoda <- read.csv("skoda_models_data.csv")
volvo <- read.csv("volvo_models_data.csv")
# Fonction pour ajuster les données et créer le graphique en barres
create_bar_plot <- function(data, title) {
data %>%
mutate(fuel.type = ifelse(grepl("hybrid", fuel.type, ignore.case = TRUE), "hybrid", fuel.type)) %>%  # Regroupe tous les types d'hybrides
group_by(fuel.type) %>%
dplyr::summarize(Average_Price = mean(price, na.rm = TRUE)) %>%
ggplot(aes(x = fuel.type, y = Average_Price)) +
geom_col(aes(fill = fuel.type)) +
scale_fill_manual(values = c("Diesel" = "blue", "Petrol" = "red", "hybrid" = "green", "Électrique" = "purple", "Gaz naturel (CNG) / Essence" = "orange")) +
labs(title = title, x = "Fuel Type", y = "Average Price") +
theme_minimal()
}
# Création des graphiques pour chaque marque
bar_plot_audi <- create_bar_plot(audi, "AUDI - Fuel type vs Average price ")
p1 <- ggplotly(bar_plot_audi)
p1
library(dplyr)
# Chargement des données
setwd("~/GitHub/Data_science/cleaned-data")
audi <- read.csv("audi_models_data.csv")
golf <- read.csv("golf_models_data.csv")
toyota <- read.csv("toyota_models_data.csv")
skoda <- read.csv("skoda_models_data.csv")
volvo <- read.csv("volvo_models_data.csv")
# Fonction pour ajuster les données et créer le graphique en barres
create_bar_plot <- function(data, title) {
data %>%
mutate(fuel.type = ifelse(grepl("hybrid", fuel.type, ignore.case = TRUE), "hybrid", fuel.type)) %>%  # Regroupe tous les types d'hybrides
group_by(fuel.type) %>%
dplyr::summarize(Average_Price = mean(price, na.rm = TRUE)) %>%
ggplot(aes(x = fuel.type, y = Average_Price)) +
geom_col(aes(fill = fuel.type)) +
scale_fill_manual(values = c("Diesel" = "blue", "Essence" = "red", "hybrid" = "green", "Électrique" = "purple", "Gaz naturel (CNG) / Essence" = "orange")) +
labs(title = title, x = "Fuel Type", y = "Average Price") +
theme_minimal()
}
# Création des graphiques pour chaque marque
bar_plot_audi <- create_bar_plot(audi, "AUDI - Fuel type vs Average price ")
p1 <- ggplotly(bar_plot_audi)
p1
View(toyota)
plot_toyota <- create_bar_plot(toyota, "TOYOTA - Fuel type vs Average price ")
p3 <- ggplotly(plot_toyota)
p3
plot_toyota <- create_bar_plot(toyota[!is.na(toyota$consumption),], "TOYOTA - Fuel type vs Average price ")
p3 <- ggplotly(plot_toyota)
p3
plot_toyota <- create_bar_plot(toyota[!is.na(toyota$fuel.type),], "TOYOTA - Fuel type vs Average price ")
p3 <- ggplotly(plot_toyota)
p3
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point() +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (Currency Unit)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point() +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point(size = 1) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point(size = 0.5) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point(size = 0.25, alpha = 0.5) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point(size = 0.3, alpha = 0.7) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = hybrid)) +
geom_point(size = 0.3, alpha = 0.7) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
View(all_cars)
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = all_cars$hybrid)) +
geom_point(size = 0.3, alpha = 0.7) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand", "hybrid")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = hybrid)) +
geom_point(size = 0.3, alpha = 0.7) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = hybrid)) +
geom_point(size = 0.3, alpha = 0.7) +
labs(title = "Comparison of Car Price and Consumption by Hybrid",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Hybrid") +
theme_minimal()
hybrid <- ggplotly(scatter_plot)
hybrid
library(ggplot2)
library(ggpubr)
library(dplyr)
# Add a 'brand' column to each dataframe
all_cars <- bind_rows(
mutate(volvo, brand = "Volvo"),
mutate(toyota, brand = "Toyota"),
mutate(skoda, brand = "Skoda"),
mutate(golf, brand = "Golf"),
mutate(audi, brand = "Audi")
)
# Clean the data by removing rows with NA in 'consumption' and 'price'
all_cars_cleaned <- na.omit(all_cars[, c("consumption", "price", "brand", "hybrid")])
scatter_plot <- ggplot(all_cars_cleaned, aes(x = consumption, y = price, color = brand)) +
geom_point(size = 0.3, alpha = 0.7) +
labs(title = "Comparison of Car Price and Consumption by Brand",
x = "Consumption (L/100km)",
y = "Price (CHF)",
color = "Brand") +
theme_minimal()
consumption <- ggplotly(scatter_plot)
consumption
library(dplyr)
library(ggplot2)
library(plotly)
create_bar_plot <- function(data, title) {
data %>%
filter(!is.na(body.type)) %>%
group_by(body.type) %>%
summarize(average_bt_duration = mean(listing.age, na.rm = TRUE),
count=n()) %>%
ggplot(aes(x = body.type, y = average_bt_duration, fill = count)) +
geom_col() +
geom_text(aes(label = count), position = position_stack(vjust = 0.5), size = 3, color = "darkgrey") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(title = title, x = "Body type", y = "Average listing duration") +
theme_minimal()
}
# Graphs for each make
plot_audi <- create_bar_plot(audi2, "Body type vs Average listing duration : Audi A3")
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
setwd("~/GitHub/Data_science/cleaned-data")
audi2 <- read.csv("audi_models_data.csv")
golf2 <- read.csv("golf_models_data.csv")
toyota2 <- read.csv("toyota_models_data.csv")
skoda2 <- read.csv("skoda_models_data.csv")
volvo2 <- read.csv("volvo_models_data.csv")
library(dplyr)
library(ggplot2)
library(plotly)
create_bar_plot <- function(data, title) {
data %>%
filter(!is.na(body.type)) %>%
group_by(body.type) %>%
summarize(average_bt_duration = mean(listing.age, na.rm = TRUE),
count=n()) %>%
ggplot(aes(x = body.type, y = average_bt_duration, fill = count)) +
geom_col() +
geom_text(aes(label = count), position = position_stack(vjust = 0.5), size = 3, color = "darkgrey") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(title = title, x = "Body type", y = "Average listing duration") +
theme_minimal()
}
# Graphs for each make
plot_audi <- create_bar_plot(audi2, "Body type vs Average listing duration : Audi A3")
p_1 <- ggplotly(plot_audi)
p_1
plot_toyota <- create_bar_plot(toyota, "Body type vs Average listing duration : Toyota Yaris")
p_4 <- ggplotly(plot_skoda)
plot_toyota <- create_bar_plot(toyota, "Body type vs Average listing duration : Toyota Yaris")
p_4 <- ggplotly(plot_toyota)
p_4
plot_toyota <- create_bar_plot(toyota[toyota$body.type != "Coupé",], "Body type vs Average listing duration : Toyota Yaris")
p_4 <- ggplotly(plot_toyota)
p_4
library(dplyr)
library(ggplot2)
library(plotly)
create_bar_plot <- function(data, title) {
data %>%
filter(!is.na(body.type)) %>%
group_by(body.type) %>%
summarize(average_bt_duration = mean(listing.age, na.rm = TRUE),
count=n()) %>%
ggplot(aes(x = body.type, y = average_bt_duration, fill = count)) +
geom_col() +
geom_text(aes(label = count), position = position_stack(vjust = 0.5), size = 3, color = "darkgrey") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(title = title, x = "Body type", y = "Average listing duration") +
theme_minimal()
}
# Graphs for each make
plot_audi <- create_bar_plot(audi2[audi2$body.type != "Coupé",], "Body type vs Average listing duration : Audi A3")
p_1 <- ggplotly(plot_audi)
p_1
library(dplyr)
library(ggplot2)
library(plotly)
create_bar_plot <- function(data, title) {
data %>%
filter(!is.na(body.type)) %>%
group_by(body.type) %>%
summarize(average_bt_duration = mean(listing.age, na.rm = TRUE),
count=n()) %>%
ggplot(aes(x = body.type, y = average_bt_duration, fill = count)) +
geom_col() +
geom_text(aes(label = count), position = position_stack(vjust = 0.5), size = 3, color = "darkgrey") +
scale_fill_gradient(low = "lightblue", high = "darkblue") +
labs(title = title, x = "Body type", y = "Average listing duration") +
theme_minimal()
}
# Graphs for each make
plot_audi <- create_bar_plot(audi2, "Body type vs Average listing duration : Audi A3")
p_1 <- ggplotly(plot_audi)
p_1
library(dplyr)
library(ggplot2)
library(plotly)
create_box_plot <- function(data, title) {
data %>%
mutate(
transmission = ifelse(grepl("Boîte manuelle automatisée", transmission, ignore.case = TRUE), "Automatique", transmission),
transmission = ifelse(transmission == "Boîte automatique variable", "Automatique", transmission)
) %>%
filter(!is.na(transmission)) %>%
ggplot(aes(x = transmission, y = listing.age, fill = transmission)) +
geom_boxplot() +
labs(title = title, x = "Transmission", y = "Listing duration") +
scale_fill_manual(values = c("Automatic" = "lightblue", "Manual" = "lightpink")) +
theme_minimal()
}
# Graphs for each make
plot_audi <- create_box_plot(audi2, "Transmission vs listing duration : Audi A3")
p.1 <- ggplotly(plot_audi)
p.1
library(dplyr)
library(ggplot2)
library(plotly)
create_box_plot <- function(data, title) {
data %>%
mutate(
transmission = ifelse(grepl("Boîte manuelle automatisée", transmission, ignore.case = TRUE), "Automatique", transmission),
transmission = ifelse(transmission == "Boîte automatique variable", "Automatique", transmission)
) %>%
filter(!is.na(transmission)) %>%
ggplot(aes(x = transmission, y = listing.age, fill = transmission)) +
geom_boxplot() +
labs(title = title, x = "Transmission", y = "Listing duration") +
scale_fill_manual(values = c("Automatique" = "lightblue", "Boîte manuelle" = "lightpink")) +
theme_minimal()
}
# Graphs for each make
plot_audi <- create_box_plot(audi2, "Transmission vs listing duration : Audi A3")
p.1 <- ggplotly(plot_audi)
p.1
library("tibble")
library("kableExtra")
library("dplyr")
# Création de la tibble
car_data <- tibble(
Variables = c("title", "subtitle", "price", "date", "body.type", "kilometers",
"fuel.type", "transmission", "power", "drivetrain", "consumption",
"expertise", "xpertise.date", "accident", "warranty", "warranty.details",
"location", "listing.id", "created.date", "new.price", "description.text",
"defective", "vehicle.age", "listing.age"),
Meaning = c("title of the listing", "subtitle of the listing", "price of the car",
"date of the car", "body type of the car", "kilometers traveled",
"type of fuel used by the car", "transmission of the car", "power of the car, in horsepower",
"drivetrain of the car", "consumption of the car", "whether the car has been expertised or not",
"date of expertise if the car has been expertised", "whether the car had an accident or not",
"whether the car has a warranty or not", "details of the warranty, if there is one",
"location of the car", "listing ID", "publication date of the listing", "new price of the car",
"description of the car", "whether the car is defective or not", "age of the car, in days",
"age of the listing, in days")
)
# Utilisation de kable et kableExtra pour formater le tableau
kable_styling <- car_data %>%
kable("html", align = 'l') %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = F) %>%
column_spec(1, bold = T, color = "steelblue") %>%
column_spec(2, italic = T)
kable_styling
setwd("~/GitHub/Data_science/report 2/data")
setwd("~/data")
setwd("data")
setwd("/data")
getwd()
setwd("~/GitHub/Data_science/report 2/data")
setwd("~/Data_science/report 2/data")
