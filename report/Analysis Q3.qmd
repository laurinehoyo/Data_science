---
title: "Q1 models"
format:
  html: 
    code-fold: true
editor: visual
---

### Q3. How do different car features affect depreciation ?

We will first filter our data to only include listings that have a value for new.price. Then we create a variable rel_dep for all of our datasets which will be the depreciation the car has experienced relative to its new price. We prefer this over simple depreciation (new price - actual price) because that variable would be a lot greater when the new price of the vehicle is large, which could bias our tests.

```{r, message=FALSE, warning=FALSE}
# Libraries + datasets

library(tidyverse)
library(corrplot)
library(MASS)
setwd("~/GitHub/Data_science/cleaned-data")

golf <- read.csv("golf_models_data.csv")
audi <- read.csv("audi_models_data.csv")
skoda <- read.csv("skoda_models_data.csv")
volvo <- read.csv("volvo_models_data.csv")
toyota <- read.csv("toyota_models_data.csv")

golf <- golf |> filter(!is.na(new.price))
audi <- audi |> filter(!is.na(new.price))
skoda <- skoda |> filter(!is.na(new.price))
volvo <- volvo |> filter(!is.na(new.price))
toyota <- toyota |> filter(!is.na(new.price))

# We create the depreciation variables
# absolute depreciation will be a lot greater when the new price of the vehicle is large, which could bias our tests. To resolve this, we will create a variable rel_dep which is relative depreciation.
golf$rel_dep <- 1 - golf$price/golf$new.price
audi$rel_dep <- 1 - audi$price/audi$new.price
skoda$rel_dep <- 1 - skoda$price/skoda$new.price
volvo$rel_dep <- 1 - volvo$price/volvo$new.price
toyota$rel_dep <- 1 - toyota$price/toyota$new.price

```

rel_dep will be our dependent variable. We will make a regression model that includes all of our variables then do a stepwise regression (backward) to remove non significant variables, in order to find the optimal models.

```{r, message=FALSE, warning=FALSE, results='hide'}
# golf

golf_model1 <- lm(golf$rel_dep ~ golf$kilometers + golf$kilometers.squared + golf$vehicle.age + golf$vehicle.age.squared + golf$power + golf$expertise + golf$warranty + golf$wagon + golf$cabriolet + golf$diesel + golf$hybrid + golf$natural.gas + golf$manual + golf$awd)
summary(golf_model1)

# stepwise regression
golf_model2 <- stepAIC(golf_model1, direction = "backward")
summary(golf_model2)

# we remove variables not significant at alpha = 0.01

golf_model3 <- lm(golf$rel_dep ~ golf$kilometers + golf$kilometers.squared + golf$vehicle.age + golf$vehicle.age.squared + golf$power + golf$diesel)
summary(golf_model3)

# we remove diesel (not significant)

golf_model3 <- lm(golf$rel_dep ~ golf$kilometers + golf$kilometers.squared + golf$vehicle.age + golf$vehicle.age.squared + golf$power)
summary(golf_model3)


# audi

audi_model1 <- lm(audi$rel_dep ~ audi$kilometers + audi$kilometers.squared + audi$vehicle.age + audi$vehicle.age.squared + audi$power + audi$consumption + audi$expertise + audi$warranty + audi$cabriolet + audi$coupe + audi$diesel + audi$hybrid + audi$natural.gas + audi$manual + audi$awd)
summary(audi_model1)

# stepwise regression
audi_model2 <- stepAIC(audi_model1, direction = "backward")
summary(audi_model2)

# we remove variables not significant at alpha = 0.01

audi_model3 <- lm(audi$rel_dep ~ audi$kilometers + audi$kilometers.squared + audi$vehicle.age + audi$manual)
summary(audi_model3)


# skoda
skoda_model1 <- lm(skoda$rel_dep ~ skoda$kilometers + skoda$kilometers.squared + skoda$vehicle.age + skoda$vehicle.age.squared + skoda$power + skoda$consumption + skoda$expertise + skoda$warranty + skoda$sedan + skoda$cabriolet + skoda$suv + skoda$diesel + skoda$hybrid + skoda$natural.gas + skoda$manual + skoda$awd)
summary(skoda_model1)

# stepwise regression
skoda_model2 <- stepAIC(skoda_model1, direction = "backward")
summary(skoda_model2)

# we remove variables not significant at alpha = 0.01
skoda_model3 <- lm(skoda$rel_dep ~ skoda$kilometers + skoda$vehicle.age + skoda$diesel + skoda$hybrid)
summary(skoda_model3)


# volvo
volvo_model1 <- lm(volvo$price ~ volvo$kilometers + volvo$kilometers.squared + volvo$vehicle.age + volvo$vehicle.age.squared + volvo$power + volvo$consumption + volvo$expertise + volvo$warranty + volvo$diesel + volvo$hybrid + volvo$manual + volvo$fwd)
summary(volvo_model1)

# stepwise regression
volvo_model2 <- stepAIC(volvo_model1, direction = "backward")
summary(volvo_model2)

# we remove variables not significant at alpha = 0.01
volvo_model3 <- lm(volvo$rel_dep ~ volvo$kilometers + volvo$kilometers.squared + volvo$vehicle.age + volvo$vehicle.age.squared + volvo$power)
summary(volvo_model3)

# we remove vehicle.age.squared and power (not significant)
volvo_model3 <- lm(volvo$rel_dep ~ volvo$kilometers + volvo$kilometers.squared + volvo$vehicle.age)
summary(volvo_model3)


#toyota
toyota_model1 <- lm(toyota$rel_dep ~ toyota$kilometers + toyota$kilometers.squared + toyota$vehicle.age + toyota$vehicle.age.squared + toyota$power + toyota$expertise + toyota$warranty + toyota$sedan + toyota$manual + toyota$awd)
summary(toyota_model1)

# stepwise regression
toyota_model2 <- stepAIC(toyota_model1, direction = "backward")
summary(toyota_model2)

# we remove variables not significant at alpha = 0.01
toyota_model3 <- lm(toyota$rel_dep ~ toyota$vehicle.age + toyota$power)
summary(toyota_model3)

## toyota does not have many observations, so this model is probably not accurate.
# continue this by looking at what is in q1 
```

Now we have found our optimal regression models, we can have a look at their summaries and residuals vs fitted values plots.

::: panel-tabset
### VW Golf

```{r, message=FALSE, warning=FALSE}
ggplot(golf_model3, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linewidth = 1) +
  geom_smooth()
summary(golf_model3)

```

### Audi A3

```{r, message=FALSE, warning=FALSE}
ggplot(audi_model3, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linewidth = 1) +
  geom_smooth()
summary(audi_model3)
```

### Skoda Octavia

```{r, message=FALSE, warning=FALSE}
ggplot(skoda_model3, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linewidth = 1) +
  geom_smooth()
summary(skoda_model3)
```

### Volvo XC60

```{r, message=FALSE, warning=FALSE}
ggplot(volvo_model3, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linewidth = 1) +
  geom_smooth()
summary(volvo_model3)
```

### Toyota Yaris

```{r, message=FALSE, warning=FALSE}
ggplot(toyota_model3, aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linewidth = 1) +
  geom_smooth()
summary(toyota_model3)
```
:::

The residuals vs fitted values plots and summaries of the linear models are very similar to our first research question, where price was the dependent variable. This is likely because relative depreciation is strongly negatively correlated with price, as seen in our EDA. This makes sense, because we know that price is mostly influenced by vehicle age and kilometers thanks to our first question. These 2 factors are commonly cited in various definitions of depreciation for vehicles and essentially define the concept.

What is interesting to observe are other factors that are found to influence depreciation. Manual Audi A3s have a lower relative depreciation, and diesel and hybrid Skoda Octavias have a higher relative depreciation. We assume that these factors don't have a significant effect on the vehicles' physical depreciation, so the depreciation might be related to the customers' demand.

Manual transmission is decreasingly prevalent among new cars, so this could be a strong selling point for older Audi A3s, which would explain the weaker depreciation.

Diesel engines have become and are still becoming increasingly unpopular since the Volkswagen emissions scandal in 2015, which could explain the stronger depreciation in diesel Skoda Octavias. The oldest hybrid Skoda in our dataset is from 2021, so it is shocking that the depreciation is higher than other fuel types as the average age and kilometers of the hybrids is much lower.

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```

```{r, message=FALSE, warning=FALSE}

```
